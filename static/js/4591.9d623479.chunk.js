"use strict";(self.webpackChunkratex_ui=self.webpackChunkratex_ui||[]).push([[4591],{94591:(e,a,t)=>{t.d(a,{offchainLookup:()=>w,offchainLookupSignature:()=>y});var r=t(12131),s=t(63476),n=t(80458),o=t(96781);class c extends n.G{constructor(e){let{callbackSelector:a,cause:t,data:r,extraData:s,sender:n,urls:c}=e;super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",c&&["  Gateway URL(s):",...c.map((e=>`    ${(0,o.Gr)(e)}`))],`  Sender: ${n}`,`  Data: ${r}`,`  Callback selector: ${a}`,`  Extra data: ${s}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class l extends n.G{constructor(e){let{result:a,url:t}=e;super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.Gr)(t)}`,`Response: ${(0,s.P)(a)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class u extends n.G{constructor(e){let{sender:a,to:t}=e;super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${a}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}var d=t(79144),i=t(22947),f=t(72883),p=t(89378),h=t(30221),b=t(11071);const y="0x556f1830",m={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function w(e,a){let{blockNumber:t,blockTag:s,data:n,to:o}=a;const{args:l}=(0,i.p)({data:n,abi:[m]}),[d,b,y,w,k]=l,{ccipRead:x}=e,O=x&&"function"===typeof x?.request?x.request:g;try{if(!(0,p.E)(o,d))throw new u({sender:d,to:o});const a=await O({data:y,sender:d,urls:b}),{data:n}=await(0,r.R)(e,{blockNumber:t,blockTag:s,data:(0,h.zo)([w,(0,f.E)([{type:"bytes"},{type:"bytes"}],[a,k])]),to:o});return n}catch(G){throw new c({callbackSelector:w,cause:G,data:n,extraData:k,sender:d,urls:b})}}async function g(e){let{data:a,sender:t,urls:r}=e,n=new Error("An unknown error occurred.");for(let c=0;c<r.length;c++){const e=r[c],u=e.includes("{data}")?"GET":"POST",i="POST"===u?{data:a,sender:t}:void 0;try{const r=await fetch(e.replace("{sender}",t).replace("{data}",a),{body:JSON.stringify(i),method:u});let o;if(o=r.headers.get("Content-Type")?.startsWith("application/json")?(await r.json()).data:await r.text(),!r.ok){n=new d.Gg({body:i,details:o?.error?(0,s.P)(o.error):r.statusText,headers:r.headers,status:r.status,url:e});continue}if(!(0,b.v)(o)){n=new l({result:o,url:e});continue}return o}catch(o){n=new d.Gg({body:i,details:o.message,url:e})}}throw n}}}]);
//# sourceMappingURL=4591.9d623479.chunk.js.map